(ns translation-reader.widgets.menu
  (:require
   ["package:flutter/material.dart" :as m]
   ["package:mongol/mongol.dart" :as mgl]
   [cljd.flutter :as f]
   [translation-reader.states.global :as gs]
   [translation-reader.widgets.menu-buttons :as menu-buttons]
   [translation-reader.utils.util :as util]
   [translation-reader.services.article :as article-service]))
   
(defn view []
  (f/widget
   :context ctx
   :get {navigator m/Navigator
         {{tertiary-color .-tertiaryContainer} .-colorScheme} m/Theme}
   :watch [{menu-idx :menu-index} gs/state]
   (m/Padding
    .padding (m.EdgeInsets/only .left 10))
   (m/Column
    .children
    [(m/CircleAvatar
      .radius 18
      .backgroundColor m.Colors/blueAccent)
     (m/SizedBox .height 10)
     (m/Container
      .color (if (= menu-idx "read")
               tertiary-color
               nil)
      .child
      (mgl/MongolTextButton
       .onPressed (fn [] 
                    (.pushNamed navigator "/")
                    (swap! gs/state assoc :menu-index "read")
                    nil)
       .child
       (mgl/MongolText "ᠣᠩᠰᠢᠬᠤ")))
     (m/Container
      .color (if (= menu-idx "write")
               tertiary-color
               nil)
      .child
      (mgl/MongolTextButton
       .onPressed (fn []
                    (.pushNamed navigator "/write")
                    (swap! gs/state assoc :menu-index "write")
                    nil)
       .child
       (mgl/MongolText "ᠪᠢᠴᠢᠬᠦ")))
     (m/SizedBox .height 10)
     (m/Container
      .color (if (= menu-idx "words")
               tertiary-color
               nil)
      .child
      (mgl/MongolTextButton
       .onPressed (fn [] (dart:core/print "xxxx"))
       .child
       (mgl/MongolText "ᠦᠭᠡᠰ")))
     (m/SizedBox .height 10)
     (m/Container
      .color (if (= menu-idx "settings")
               tertiary-color
               nil)
      .child
      (mgl/MongolTextButton
       .onPressed (fn []
                    (dart:core/print "xxxx")
                    nil)
       .child
       (mgl/MongolText " ᠲᠣᠬᠢᠷᠠᠭᠤᠯᠤᠯᠲᠠ")))])))
       

(defn read-menu [curr-tab-value]
  (let [items ["Read Translation" "Read Original" "Translate"]]
    (f/widget
     :context ctx
     :get {{{color .-color} .-cardTheme} m/Theme
           navigator m/Navigator}
     :watch [curr-tab curr-tab-value]
     (m/Container
      .width 40)
     (m.ListView/builder
      .itemCount (count items)
      .itemBuilder
      (fn [context i]
        (m/Stack
         .children
         [(m/Positioned
           .top 2
           .bottom 2
           .right 0
           .child
           (if (= i curr-tab)
             (m/Container .color color
                          .width 1)
             (m/SizedBox)))
          (m/GestureDetector
           .onTap (fn []
                    (reset! curr-tab-value i)
                    (when (and (= i 2)
                               (not-empty (:article @gs/state)))
                      (article-service/initiate-sentences ctx navigator (get (:article @gs/state) "id")))
                    nil)
           .child (m/Container
                   .padding (m.EdgeInsets/only .left 10 .right 10 .top 20 .bottom 20)
                   .child (mgl/MongolText (nth items i)
                                          .style (m/TextStyle .fontSize 12
                                                              .color color))))]))))))